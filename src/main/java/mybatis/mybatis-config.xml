<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
			<!-- mybatis가 데이터베이스에 연결하기 위한 설정(config)파일 
			https://mybatis.org/mybatis-3/ko/getting-started.html 참고  -->
<!-- db 설정 -->
<configuration>  
  <!--  datasource 태그 안에 4개의 프로퍼티값이 저장된 파일 
  		: 파일 위치한 패키지이름을 디렉토리형식(/)으로 작성-->
  <properties resource="mybatis/db.properties"></properties>
  
  <!-- 타입 별칭 설정하기 -->
  <typeAliases>
  		<typeAlias type="day4.mybatis.dto.BuyDto" alias="BuyDto"/>
  		<typeAlias type="day4.mybatis.dto.ProductDto" alias="ProductDto"/>
  		 <typeAlias type="day4.mybatis.dto.CustomerDto" alias="CustomerDto"/>
  		<typeAlias type="day4.mybatis.dto.CustomerBuyDto" alias="CustomerBuyDto"/>
  </typeAliases>
  
  <!--  db 연결정보 -->
  <environments default="development">
    <environment id="development">
      <transactionManager type="JDBC"/>
<!-- 데이터베이스 연결 풀 DBCP 설정 :  ${ } 기호안의 값은 properties 파일에서 읽어옵니다.
	 db연결 정보가 바뀔때 properties 파일의 값만 변경하거나 파일을 교체하면 되므로 관리가 쉽습니다.
-->
      <dataSource type="POOLED">  
      <!-- DataBase Connection Pool(저장소) : 커넥션 객체를 여러개 생성해서 저장하고
      	   사용자 요청이 있을때 풀에서 객체를 할당해 줍니다.요청에 대한 응답이 완료되면 다시 풀에 반환.
      	   풀 관리는 톰캣에서 하고 구현시는 dataSource 객체를 설정해 주면 됩니다.   -->
        <property name="driver" value="${driver}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
      </dataSource>
    </environment>
  </environments>
  
  <!-- SQL 매퍼 파일을 등록.    -->
  <mappers>
    <!-- JDBC로 처리하는 상당부분의 코드와 파라미터 설정 및 조회결과와 dto객체 매핑을 해줍니다. -->
  	<!-- 실행할 SQL 쿼리 저장한 파일. mapper파일위치와 파일명 오류나지 않도록 확인!! 테이블컬럼과 자바객체 변수(프로퍼티) 를 바로 매핑. -->
    <mapper resource="mybatis/buys.xml"/>
    <mapper resource="mybatis/product.xml"/>
    <mapper resource="mybatis/customer.xml"/>
    <!-- resource 속성일 때 파일의 패키지명은 . 아니고 / 기호 사용합니다. sql mapper 파일은 여러개 사용될 수 있습니다. -->
  </mappers>
</configuration>


